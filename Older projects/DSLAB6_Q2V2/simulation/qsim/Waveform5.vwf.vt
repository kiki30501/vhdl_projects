// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/02/2022 18:22:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          DSLAB6_Q2V2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module DSLAB6_Q2V2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg L4;
reg L5;
reg L6;
reg L7;
// wires                                               
wire A0;
wire A1;
wire B0;
wire B1;
wire C0;
wire C1;
wire D0;
wire D1;
wire E0;
wire E1;
wire F0;
wire F1;
wire G0;
wire G1;

// assign statements (if any)                          
DSLAB6_Q2V2 i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.B0(B0),
	.B1(B1),
	.C0(C0),
	.C1(C1),
	.D0(D0),
	.D1(D1),
	.E0(E0),
	.E1(E1),
	.F0(F0),
	.F1(F1),
	.G0(G0),
	.G1(G1),
	.L4(L4),
	.L5(L5),
	.L6(L6),
	.L7(L7)
);
initial 
begin 
#1000000 $finish;
end 

// L7
initial
begin
	L7 = 1'b0;
end 

// L6
initial
begin
	L6 = 1'b0;
end 

// L5
initial
begin
	L5 = 1'b0;
end 

// L4
initial
begin
	L4 = 1'b0;
end 
endmodule

